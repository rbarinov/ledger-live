name: "[Test] Desktop App"

on:
  push:
    branches:
      - main
      - develop
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  test-desktop-app:
    name: "Ledger Live Desktop Tests"
    env:
      NODE_OPTIONS: "--max-old-space-size=7168"
      INSTRUMENT_BUILD: true
      FORCE_COLOR: 3
      CI_OS: ${{ matrix.os }}
      DEBUG: "pw:browser*"
      DEBUG_LOGS: 1
    strategy:
      fail-fast: false
      matrix:
        os:
          # - ubuntu-latest
          # - macos-latest
          - windows-latest
        ref:
          - c57b5ba9e402fbf4719260a58932b218f29bfb3d
          - 311a3ce7a95b82c46ac269c540bc7770691cf5b9
          - c35577cf244cb6e15e4e3c7f58db14558ba05e9c
          - b410fbfc29c42a9445f65f6fa24911e5bdf35108
          - ffa7ecbe1f08f64e160755155ab4c494923565dd
          - bbb7a21d81294fce6463b28a8d44012114a23f85

    runs-on: ${{ matrix.os }}
    steps:
      - name: format os name
        id: os
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            if ("${{ matrix.os }}" === "ubuntu-latest") {
              return "linux"
            } else if ("${{ matrix.os }}" === "macos-latest") {
              return "macos"
            } else if ("${{ matrix.os }}" === "windows-latest") {
              return "windows"
            }
      - uses: actions/checkout@v3
        with:
          ref: ${{ matrix.ref }}
      - uses: pnpm/action-setup@v2.1.0
        with:
          version: latest
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: pnpm
          cache-dependency-path: "**/pnpm-lock.yaml"
      - uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
          bundler-cache: true
      - name: Bump npm to latest
        run: npm i -g npm
      - name: TurboRepo local server
        uses: felixmosh/turborepo-gh-artifacts@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          server-token: "yolo"
      - name: Install dependencies
        run: pnpm i --filter="ledger-live-desktop..." --filter="ledger-live" --frozen-lockfile --unsafe-perm
      - name: Install playwright dependencies
        run: npx @playwright/test install-deps
      - name: Build dependencies
        run: pnpm turbo run ledger-live-desktop#build:testing --api="http://127.0.0.1:9080" --token="yolo" --team="foo"
      - name: Run unit tests [Linux]
        if: matrix.os == 'ubuntu-latest'
        run: pnpm desktop test:jest
      - name: Run playwright tests [Linux => xvfb-run]
        if: matrix.os == 'ubuntu-latest'
        run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- pnpm desktop test:playwright
        shell: bash
      - name: Run playwright tests
        if: matrix.os != 'ubuntu-latest'
        run: pnpm desktop test:playwright
        shell: bash
      - name: upload diffs to imgur
        if: always() && !cancelled()
        uses: ledgerhq/ledger-live/tools/actions/upload-images@develop
        id: imgur
        with:
          path: apps/ledger-live-desktop/tests/artifacts/test-results
          workspace: ${{ github.workspace }}
          os: ${{ steps.os.outputs.result }}
      - name: upload ci suggested screenshots
        if: always() && !cancelled()
        uses: actions/upload-artifact@v3
        with:
          name: images
          path: images-${{steps.os.outputs.result}}.json
      - name: Upload playwright test results [On Failure]
        uses: actions/upload-artifact@v3
        if: failure() && !cancelled()
        with:
          name: ${{ format('playwright-results-{0}', matrix.os) }}
          path: |
            apps/ledger-live-desktop/tests/artifacts/test-results
            apps/ledger-live-desktop/tests/artifacts/html-report
            apps/ledger-live-desktop/tests/artifacts/coverage
            apps/ledger-live-desktop/tests/artifacts/videos
